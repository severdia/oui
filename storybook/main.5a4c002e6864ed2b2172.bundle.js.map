{"version":3,"file":"main.5a4c002e6864ed2b2172.bundle.js","sources":["webpack:///./src/components/Link/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n/**\n * @param {Object} props - Properties passed to component\n * @returns {ReactElement}\n */\n\nconst Link = ({\n  children,\n  href,\n  onClick,\n  isDisabled = false,\n  newWindow = false,\n  style,\n  testSection,\n}) => {\n  const classes = classNames({\n    ['link']: true,\n    [`link--${style}`]: style,\n    ['link--disabled']: isDisabled,\n    'pointer-events--none': isDisabled,\n  });\n\n  if (!href && !onClick) {\n    return (\n      <span\n        data-oui-component={ true }\n        className={ classes }\n        data-test-section={ testSection }\n        data-track-id={ testSection }\n        disabled={ isDisabled }>\n        { children }\n      </span>\n    );\n  }\n\n  return (\n    <a\n      data-oui-component={ true }\n      href={ href }\n      className={ classes }\n      data-test-section={ testSection }\n      data-track-id={ testSection }\n      onClick={ onClick }\n      { ...(newWindow ? { target: '_blank', rel: 'noopener noreferrer' } : {}) }\n      disabled={ isDisabled }>\n      { children }\n    </a>\n  );\n};\n\nLink.propTypes = {\n  /** Text/node that is linked */\n  children: PropTypes.node.isRequired,\n  /** Href for the anchor element */\n  href: PropTypes.string,\n  /** Disable link and interactivity */\n  isDisabled: PropTypes.bool,\n  /** Open link in new window */\n  newWindow: PropTypes.bool,\n  /** Click handler function */\n  onClick: PropTypes.func,\n  /** Link style options */\n  style: PropTypes.oneOf([\n    'default',\n    'dark',\n    'muted',\n    'bad-news',\n    'reverse',\n  ]),\n  /** Hook for automated JavaScript tests */\n  testSection: PropTypes.string,\n};\n\nexport default Link;\n"],"mappings":"AAAA","sourceRoot":""}